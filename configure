# Anticonf (tm) script by Jeroen Ooms (2020)
# This script will query 'pkg-config' for the required cflags and ldflags.
# If pkg-config is unavailable or does not find the library, try setting
# INCLUDE_DIR and LIB_DIR manually via e.g:
# R CMD INSTALL --configure-vars='INCLUDE_DIR=/.../include LIB_DIR=/.../lib'

# Library settings
PKG_CONFIG_NAME="cbc"
PKG_DEB_NAME="coinor-libcbc-dev, coinor-libclp-dev"
PKG_RPM_NAME="coin-or-Cbc-devel, coin-or-Clp-devel"
PKG_BREW_NAME="coin-or-tools/coinor/cbc"
PKG_TEST_HEADER="<CbcSolver.hpp>"
PKG_CFLAGS="-I/usr/include/coin"
PKG_LIBS="-lCbc -lCbcSolver"

# Use pkg-config if available
pkg-config --version >/dev/null 2>&1
if [ $? -eq 0 ]; then
  PKGCONFIG_CFLAGS=`pkg-config --cflags --silence-errors ${PKG_CONFIG_NAME}`
  PKGCONFIG_LIBS=`pkg-config --libs ${PKG_CONFIG_NAME}`
fi

# Note that cflags may be empty in case of success
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
elif [ "$PKGCONFIG_CFLAGS" ] || [ "$PKGCONFIG_LIBS" ]; then
  echo "Found pkg-config cflags and libs!"
  PKG_CFLAGS=${PKGCONFIG_CFLAGS}
  PKG_LIBS=${PKGCONFIG_LIBS}
elif [ `uname` = "Darwin" ]; then
  # init brew variables
  brew --version >/dev/null 2>&1
  BREW_DIR=`brew --prefix`
  BREW_CELLAR=`brew --cellar`

  # find CBC
  if [ -d "${BREW_DIR}/cbc" ]; then
    echo "Found CBC brew installation"
    BREW_CBC_VERSION=`ls ${BREW_DIR}/cbc`
    BREW_CBC_PATH="${BREW_DIR}/cbc/${BREW_CBC_VERSION}"
  elif [ -d "${BREW_CELLAR}/cbc" ]; then
    echo "Found CBC brew keg-only installation"
    BREW_CBC_VERSION=`ls ${BREW_CELLAR}/cbc`
    BREW_CBC_PATH="${BREW_CELLAR}/cbc/${BREW_CBC_VERSION}"
  fi

  # find CoinUtils
  if [ -d "${BREW_DIR}/coinutils" ]; then
    echo "Found COINUTILS brew installation"
    BREW_COINUTILS_VERSION=`ls ${BREW_DIR}/coinutils`
    BREW_COINUTILS_PATH="${BREW_DIR}/coinutils/${BREW_COINUTILS_VERSION}"
  elif [ -d "${BREW_CELLAR}/coinutils" ]; then
    echo "Found COINUTILS brew keg-only installation"
    BREW_COINUTILS_VERSION=`ls ${BREW_CELLAR}/coinutils`
    BREW_COINUTILS_PATH="${BREW_CELLAR}/coinutils/${BREW_COINUTILS_VERSION}"
  fi

  # set variables
  if [ "$BREW_CBC_PATH" ]; then
    PKG_CFLAGS="-I${BREW_CBC_PATH}/include/cbc/coin ${BREW_COINUTILS_PATH}/include"
    PKG_LIBS="-L${BREW_CBC_PATH}/lib $PKG_LIBS"
  fi

  # debugging
  echo "[BREW_DIR]"
  ls -la $BREW_DIR
  echo "[BREW_CELLAR]"
  ls -la $BREW_CELLAR
  echo "[BREW_CBC_PATH]"
  ls -la ${BREW_CBC_PATH}
  echo "[BREW_COINUTILS_PATH]"
  ls -la $BREW_COINUTILS_PATH
  echo "[BREW_COINUTILS_PATH]/include"
  ls -la $BREW_COINUTILS_PATH/include

fi

# For debugging
echo "Using PKG_CFLAGS=$PKG_CFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Find compiler
CXX=$(${R_HOME}/bin/R CMD config CXX)
CXXFLAGS=$(${R_HOME}/bin/R CMD config CXXFLAGS)
CPPFLAGS=$(${R_HOME}/bin/R CMD config CPPFLAGS)

# Test configuration
echo "${CXX} -E ${CPPFLAGS} ${PKG_CFLAGS} ${CXXFLAGS} -xc++ -"

echo "#include $PKG_TEST_HEADER" | ${CXX} -E ${CPPFLAGS} ${PKG_CFLAGS} ${CXXFLAGS} -xc++ -

echo "#include $PKG_TEST_HEADER" | ${CXX} -E ${CPPFLAGS} ${PKG_CFLAGS} ${CXXFLAGS} -xc++ - >/dev/null 2>&1

# Customize the error
if [ $? -ne 0 ]; then
  echo "------------------------- [ANTICONF ERROR] ----------------------------------"
  echo "Configuration failed because $PKG_CONFIG_NAME was not found. Try installing:"
  echo " * deb: $PKG_DEB_NAME (Debian, Ubuntu, etc)"
  echo " * rpm: $PKG_RPM_NAME (Fedora, CentOS, RHEL)"
  echo " * brew: $PKG_BREW_NAME (Mac OSX)"
  echo "If $PKG_CONFIG_NAME is already installed, check that 'pkg-config' is in your"
  echo "PATH and PKG_CONFIG_PATH contains a $PKG_CONFIG_NAME.pc file. If pkg-config"
  echo "is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:"
  echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
  echo "------------------------- [BEGIN ERROR MESSAGE] -----------------------------"
  cat configure.log
  echo "------------------------- [END ERROR MESSAGE] -------------------------------"
  exit 1
fi

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# Success
exit 0
