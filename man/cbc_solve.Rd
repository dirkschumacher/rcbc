% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cbc_solve.R
\name{cbc_solve}
\alias{cbc_solve}
\title{Solve a linear (mixed) integer program with CBC}
\usage{
cbc_solve(
  obj,
  mat,
  row_ub = rep.int(Inf, nrow(mat)),
  row_lb = rep.int(-Inf, nrow(mat)),
  col_lb = rep.int(-Inf, ncol(mat)),
  col_ub = rep.int(Inf, ncol(mat)),
  is_integer = rep.int(FALSE, ncol(mat)),
  max = FALSE,
  cbc_args = list()
)
}
\arguments{
\item{obj}{coeffcients for the objective function. One number per column.}

\item{mat}{the constraint matrix. Needs to be an object that can be coerced
to a sparse triplet based matrix via \code{as(mat, "dgTMatrix")}.}

\item{row_ub}{numeric upper bounds for each row}

\item{row_lb}{numeric lower bounds for each row}

\item{col_lb}{numeric lower bounds for each column}

\item{col_ub}{numeric upper bounds for each column}

\item{is_integer}{logical vector for each column if variable is integer. By
default all columns are not integers.}

\item{max}{boolean TRUE iff problem is maximization problem. Default is FALSE.}

\item{cbc_args}{list cbc arguments}
}
\value{
a named list. "column_solution" contains the column solution in the order
        of the constraint matrix. "status" is the status code.
}
\description{
Solve a linear (mixed) integer program with CBC
}
\examples{
# max 1 * x + 2 * y
# s.t.
#   x + y <= 1
#   x, y integer
A <- matrix(c(1, 1), ncol = 2, nrow = 1)
result <- cbc_solve(
  obj = c(1, 2),
  mat = A,
  is_integer = c(TRUE, TRUE),
  row_lb = c(-Inf),
  row_ub = c(1),
  max = TRUE)
}
